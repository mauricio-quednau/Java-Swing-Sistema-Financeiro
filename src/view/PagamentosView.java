/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import DAO.ClienteDAO;
import DAO.PagamentoDAO;
import DAO.ServicoDAO;
import classes.OperacaoPagamento;
import classes.Pagamento;
import classes.Servico;
import classes.StringData;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mauricio
 */
public class PagamentosView extends javax.swing.JInternalFrame {
    JDesktopPane parent;
    
    private ArrayList<Pagamento> pagamentos;
    
    /**
     * Creates new form VencimentosView
     */
    public PagamentosView(JDesktopPane parent) {
        initComponents();
        this.parent = parent;
        setTamanhoColunasTabela();
        
        //Preencher data inicial e final com o periodo do mes corrente
        String dataFim = new SimpleDateFormat("dd/MM/yyyy").format(new Date());
        String dataini = new SimpleDateFormat("dd/MM/yyyy").format(new Date());
        dataini = "01/" + dataini.substring(3);
        
        
        try {
            jDateChooser1.setDate(new SimpleDateFormat("dd/MM/yyyy").parse(dataini));
            jDateChooser3.setDate(new Date());
        } catch (ParseException ex) {
            Logger.getLogger(PagamentosView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        this.pagamentos = (ArrayList) new PagamentoDAO().listPorPeriodo(dataini, dataFim);
        preencherTabela(this.pagamentos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfValorTotal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jbTodos = new javax.swing.JButton();
        jbMesAnt = new javax.swing.JButton();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jbOk = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Pagamentos");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Data Pagto", "Valor", "Cliente", "Serviço", "Vencimento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Pagamentos Realizados");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("TOTAL: R$ ");

        jLabel3.setText("Período DE:");

        jbTodos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/all2.png"))); // NOI18N
        jbTodos.setText("Todos");
        jbTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTodosActionPerformed(evt);
            }
        });

        jbMesAnt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/anterior.png"))); // NOI18N
        jbMesAnt.setText("Mês Ant.");
        jbMesAnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMesAntActionPerformed(evt);
            }
        });

        jLabel5.setText("ATÉ:");

        jbOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ok.png"))); // NOI18N
        jbOk.setText("OK");
        jbOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbOk)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbMesAnt)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbTodos))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel5))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbTodos)
                        .addComponent(jbMesAnt)
                        .addComponent(jbOk)))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setTamanhoColunasTabela(){
        jTable1.getColumnModel().getColumn(0).setMaxWidth(35);//ID
        jTable1.getColumnModel().getColumn(1).setMaxWidth(90);//data pagro
        jTable1.getColumnModel().getColumn(2).setMaxWidth(80);//valor
        jTable1.getColumnModel().getColumn(3).setMaxWidth(220);//cliente
        jTable1.getColumnModel().getColumn(4).setMaxWidth(220);//servico
        jTable1.getColumnModel().getColumn(5).setMaxWidth(90);//vencimento
    }
    
    private void preencherTabela(ArrayList<Pagamento> pagtos){
        DefaultTableModel modeloTb = (DefaultTableModel)jTable1.getModel();
        modeloTb.setNumRows(0);

        float valorTotal = 0;
        for(Pagamento p : pagtos){
            String nomeCli = new ClienteDAO().consultar(p.getIdCliente()).getNomeRSocial();
            Servico ser = new ServicoDAO().consultar(p.getIdServico());
            String nomeSer = ser.getNome();
            float valor = 0;
            for(OperacaoPagamento ops : p.getOperacoes())
                valor += ops.getValor();
            
            modeloTb.addRow(new Object[]{p.getId(), StringData.dateFromSQL(p.getDataPagamento()), valor, nomeCli, nomeSer, StringData.dateFromSQL(p.getDataVencimento())});
            valorTotal += valor;
        }
        
        jtfValorTotal.setText(String.valueOf(valorTotal));
        
    }
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // pegar a linha selecionada e jogar os dados correspondentes para cima
        // desabilitar botoes: editar e pesquisar - estado atual: edição
        // deixar habilitado: salvar, cancelar e excluir
        int linhaSelecionada = jTable1.getSelectedRow();
        if(linhaSelecionada >= 0){
            
        }

        // ao carregar a tela, necessário deixar habilitado:
        // pesquisa, salvar (se nome diferente de vazio),
    }//GEN-LAST:event_jTable1MouseClicked

    private void jbTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTodosActionPerformed
        this.pagamentos = (ArrayList) new PagamentoDAO().list();
        preencherTabela(this.pagamentos);
    }//GEN-LAST:event_jbTodosActionPerformed

    private void jbOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOkActionPerformed
        String inicio = new SimpleDateFormat("dd/MM/yyyy").format(jDateChooser1.getDate());
        String fim = new SimpleDateFormat("dd/MM/yyyy").format(jDateChooser3.getDate());
        
        this.pagamentos = (ArrayList) new PagamentoDAO().listPorPeriodo(inicio, fim);
        preencherTabela(this.pagamentos);
    }//GEN-LAST:event_jbOkActionPerformed

    private void jbMesAntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMesAntActionPerformed
        int ano = Integer.parseInt(new SimpleDateFormat("yyyy").format(new Date()));
        byte mesAnterior = Byte.parseByte(new SimpleDateFormat("MM").format(new Date()));
        String ultimoDia = StringData.getLastDayOfMonthString(--mesAnterior);
        String dataIni = "01/"+(mesAnterior <= 9 ? "0" : "")+mesAnterior+"/"+ano;
        String dataFim = ultimoDia+(mesAnterior <=9 ? "/0" : "/")+mesAnterior+"/"+ano;
        
        try {
            jDateChooser1.setDate(new SimpleDateFormat("dd/MM/yyyy").parse(dataIni));
            jDateChooser3.setDate(new SimpleDateFormat("dd/MM/yyyy").parse(dataFim));
        } catch (ParseException ex) {
            Logger.getLogger(PagamentosView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.pagamentos = (ArrayList) new PagamentoDAO().listPorPeriodo(dataIni, dataFim);
        preencherTabela(this.pagamentos);
    }//GEN-LAST:event_jbMesAntActionPerformed

    public int getIdClienteServicoLinhaTabela(int linha){
        if(linha < 0 || linha > jTable1.getRowCount())
            return 0;
        else{
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            return (int)model.getValueAt(linha, 0); // 0(zero) referente ao primeiro campo (ID) da tabela
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbMesAnt;
    private javax.swing.JButton jbOk;
    private javax.swing.JButton jbTodos;
    private javax.swing.JTextField jtfValorTotal;
    // End of variables declaration//GEN-END:variables
}
