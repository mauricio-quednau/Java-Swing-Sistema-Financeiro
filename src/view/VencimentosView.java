/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import DAO.ClienteDAO;
import DAO.ClienteServicoDAO;
import DAO.ServicoDAO;
import classes.Cliente;
import classes.ClienteServico;
import classes.Pagamento;
import classes.Servico;
import java.util.ArrayList;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mauricio
 */
public class VencimentosView extends javax.swing.JInternalFrame {
    JDesktopPane parent;
    
    private ArrayList<ClienteServico> clienteServicos;
    private ArrayList<Cliente> clientes;
    private ArrayList<Servico> servicos;
    
    /**
     * Creates new form VencimentosView
     */
    public VencimentosView(JDesktopPane parent) {
        initComponents();
        this.parent = parent;
        setTamanhoColunasTabela();
        
        this.clientes = (ArrayList) new ClienteDAO().list();
        this.servicos = (ArrayList) new ServicoDAO().list();
        this.clienteServicos = (ArrayList) new ClienteServicoDAO().listAtivos();
        preencherTabela(this.clienteServicos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jbPagar = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Vencimentos");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Cliente", "Serviço", "Vencimento", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Próximos vencimentos");

        jbPagar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbPagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/money.png"))); // NOI18N
        jbPagar.setText("Pagar");
        jbPagar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jbPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbPagar)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPagar))
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setTamanhoColunasTabela(){
        jTable1.getColumnModel().getColumn(0).setMaxWidth(35);//ID
        jTable1.getColumnModel().getColumn(1).setMaxWidth(220);//Cliente
        jTable1.getColumnModel().getColumn(2).setMaxWidth(190);//servico
        jTable1.getColumnModel().getColumn(3).setMaxWidth(80);//vencimento
        jTable1.getColumnModel().getColumn(4).setMaxWidth(100);//valor
    }
    
    private void preencherTabela(ArrayList<ClienteServico> cliser){
        DefaultTableModel modeloTb = (DefaultTableModel)jTable1.getModel();
        modeloTb.setNumRows(0);
        for(ClienteServico cs : this.clienteServicos){
            String nomeServico = "";
            for(Servico s : this.servicos){
                if(s.getId() == cs.getIdServico()){
                    nomeServico = s.getNome();
                    break;
                }
            }
            String nomeCliente = "";
            for(Cliente c : this.clientes){
                if(c.getId() == cs.getIdCliente()){
                    nomeCliente = c.getNomeRSocial();
                    break;
                }
            }
            float valorTotalPeriodo = cs.getValor() * cs.getPeriodo();
            modeloTb.addRow(new Object[]{cs.getId(), nomeCliente, nomeServico, cs.getDataVencimentoFromSql(), "R$ "+valorTotalPeriodo});
        }
    }
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // pegar a linha selecionada e jogar os dados correspondentes para cima
        // desabilitar botoes: editar e pesquisar - estado atual: edição
        // deixar habilitado: salvar, cancelar e excluir
        int linhaSelecionada = jTable1.getSelectedRow();
        if(linhaSelecionada >= 0){
            
        }

        // ao carregar a tela, necessário deixar habilitado:
        // pesquisa, salvar (se nome diferente de vazio),
    }//GEN-LAST:event_jTable1MouseClicked

    public int getIdClienteServicoLinhaTabela(int linha){
        if(linha < 0 || linha > jTable1.getRowCount())
            return 0;
        else{
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            return (int)model.getValueAt(linha, 0); // 0(zero) referente ao primeiro campo (ID) da tabela
        }
    }
    
    private void jbPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPagarActionPerformed
        int linhaSelecionada = jTable1.getSelectedRow();
        if(linhaSelecionada >= 0){
            Pagamento p = new Pagamento();
            int idClienteServico = getIdClienteServicoLinhaTabela(linhaSelecionada);
            for(ClienteServico cs : this.clienteServicos){
                if(cs.getId() == idClienteServico){
                    p.setIdClienteServico(idClienteServico);
                    p.setIdCliente(cs.getIdCliente());
                    p.setIdServico(cs.getIdServico());
                    p.setDataVencimento(cs.getDataVencimento());
                    p.setValorOriginal(cs.getValor()*cs.getPeriodo());
                    p.setDataInicioServico(cs.getDataInicio());
                    break;
                }
            }
            PagamentoView pagtoView = new PagamentoView(parent, p);
            pagtoView.setVisible(true);
            parent.add(pagtoView);
            parent.setComponentZOrder(pagtoView, 0);
        }
        else{
            JOptionPane.showMessageDialog(this, "Selecione algum vencimento!");
        }
    }//GEN-LAST:event_jbPagarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbPagar;
    // End of variables declaration//GEN-END:variables
}
